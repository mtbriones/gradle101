task initializeDatabase
initializeDatabase << { println 'connect to database' }
initializeDatabase << { println 'update database schema' }
initializeDatabase { print 'configure' }
initializeDatabase { println ' database connection' }


// Declare that world depends on hello
// Preserves any previously defined dependencies as well
task loadTestData {
	dependsOn createSchema
}

// Alternative way to express the same dependency
task loadTestData {
	dependsOn << createSchema
}

// Do the same using single quotes (which are usually optional)
task loadTestData {
	dependsOn 'createSchema'
}

// Explicitly call the method on the task object
task loadTestData
loadTestData.dependsOn createSchema

// Shortcut for declaring dependency
task loadTestData(dependsOn: createSchema)

// Declare dependencies one at a time
task loadTestData {
dependsOn << compileTestClasses
dependsOn << createSchema
}
// Pass dependencies as a variable-length list
task world {
dependsOn compileTestClasses, createSchema
}

// Explicitly call the method on the task object
task world
world.dependsOn compileTestClasses, createSchema
// A shortcut for dependencies only
// Note the Groovy list syntax
task world(dependsOn: [ compileTestClasses, createSchema ])